;; this is unfinished WIP, not ready for use
;; 
;; goals:
;; modifier keys on homerow
;; autoshift on all keys
;;
;; cant get it to feel nice, issues with ctrl-C
;; not sure if autoshift works on the mod keys
;; using layers for alt and ctl might be better
;;   but wouldnt allow for holding down and mouse clicking


(defcfg
  input  (device-file "/dev/input/by-id/usb-05f3_0007-event-kbd")
  output (uinput-sink "My KMonad output"   "sleep 1 && setxkbmap -option compose:ralt && xset r rate 200 40")
  fallthrough true
  allow-cmd true
  cmp-seq ralt    ;; Set the compose key to `RightAlt'
  cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press
  key-seq-delay 5 ;; 5ms delay between each outputted key event
)



(defsrc
  esc F1   F2   F3   F4   F5   F6   F7   F8   F9   F10  F11  F12  prnt slck pause

  =    1    2    3    4    5                   6    7    8    9    0    -
  tab  q    w    e    r    t                   y    u    i    o    p    \
  caps a    s    d    f    g                   h    j    k    l    ;    '
  lsft z    x    c    v    b                   n    m    ,    .    /    rsft
       grv  nubs left rght                          up   down [    ]

                           met lalt   rctl rmet
                      bspc del  home   pgup  ret spc
                                 end   pgdn
)


(deflayer default
  esc F1   F2   F3   F4   F5   F6   F7   F8   F9   F10  F11  F12  prnt slck del

  =     1    2    3    4    5                   6    7    8    9    0    -
  tab   @q    @w    @e    @r    @t             @y   @u   @i   @o   @p    \
  esc   @a   @s   @d   @f   @g                  @h   @j   @k   @l   @;    '
  @lsft @z   @x   @c   @v   @b                  @n   @m    ,    .    /    @rsft
        grv  end    left rght                          up   down [    ]

                           @lctl @lalt   @rctl @rmet
                      bspc tab   home    pgup  ret spc
                                 end   pgdn
)

(defalias q (tap-hold 300 q (tap-macro Q lsft)))
(defalias w (tap-hold 300 w (tap-macro W lsft)))
(defalias e (tap-hold 300 e (tap-macro E lsft)))
(defalias r (tap-hold 300 r (tap-macro R lsft)))
(defalias t (tap-hold 300 t (tap-macro T lsft)))
(defalias y (tap-hold 300 y (tap-macro Y lsft)))
(defalias u (tap-hold 300 u (tap-macro U lsft)))
(defalias i (tap-hold 300 i (tap-macro I lsft)))
(defalias o (tap-hold 300 o (tap-macro O lsft)))
(defalias p (tap-hold 300 p (tap-macro P lsft)))

(defalias z (tap-hold 300 z (tap-macro Z lsft)))
(defalias x (tap-hold 300 x (tap-macro X lsft)))
(defalias c (tap-hold 300 c C))
(defalias v (tap-hold 300 v (tap-macro V lsft)))
(defalias b (tap-hold 300 b (tap-macro B lsft)))
(defalias n (tap-hold 300 n (tap-macro N lsft)))
(defalias m (tap-hold 300 m (tap-macro M lsft)))


(defalias g (tap-hold-next-release 300 g lsft :timeout-button (tap-macro G lsft)))
(defalias h (tap-hold-next-release 300 h rsft :timeout-button (tap-macro H lsft)))

(defalias f (tap-hold-next-release 300 f lsft :timeout-button (tap-macro F lsft)))
(defalias j (tap-hold-next-release 300 j rsft :timeout-button (tap-macro J lsft)))

(defalias d (tap-hold-next-release 300 d lctl :timeout-button (tap-macro D lctl)))
(defalias k (tap-hold-next-release 300 k rctl :timeout-button (tap-macro K rctl)))

(defalias s (tap-hold-next-release 300 s lalt :timeout-button (tap-macro S lalt)))
(defalias l (tap-hold-next-release 300 l ralt :timeout-button (tap-macro L ralt)))

(defalias a (tap-hold-next-release 300 a lmet :timeout-button (tap-macro A lmet)))
(defalias ; (tap-hold-next-release 300 ; rmet :timeout-button (tap-macro S-; rmet)))


(defalias lsft (tap-hold 300 S-9 lsft))
(defalias rsft (tap-hold-next 100 S-0 rsft))

;; (defalias lctl (tap-next S-[ (before-after-next (press-only lctl) (release-only lctl)) ))


(defalias lctl (tap-next S-[ lctl))


(defalias rctl (tap-next-press ] rctl ))

(defalias lalt (tap-hold 300 [ lalt ))

(defalias rmet (tap-hold 300 S-] rmet ))

(defalias copy C-c)
(defalias paste C-v)


